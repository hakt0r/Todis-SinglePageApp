{"version":3,"sources":["lib.js","Model.js","component/Add.js","component/Edit.js","component/Tools.js","component/View.js","component/List.js","logo.svg","App.js","serviceWorkerRegistration.js","index.js"],"names":["SET","k","v","localStorage","setItem","JSON","stringify","PENDING","STATUS_TEXT","1","2","3","STATUS_ICONS","STATUS_VARIANT","defaultState","list","content","status","date","Date","now","getItem","initialState","parse","TodoContext","React","createContext","reducer","state","action","type","index","findIndex","t","filter","TodisStore","children","useReducer","todoActions","dispatch","add","change","set","remove","actions","useEffect","Provider","value","Add","Todo","useContext","useState","setValue","colSpan","InputGroup","FormControl","onChange","e","target","onKeyPress","key","Append","Button","onClick","Edit","props","todo","title","setEdit","variant","Tools","Dropdown","Toggle","Menu","Item","Badge","Divider","View","edit","view","setView","expand","length","slice","moment","fromNow","List","Table","map","App","src","logo","className","alt","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","SWork"],"mappings":"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","file":"static/js/main.535ab866.chunk.js","sourcesContent":["\nexport const SET = (k,v)=>\n    localStorage.setItem(k,JSON.stringify(v));\n\nexport const GET = (k  )=>\n    JSON.parse(localStorage.getItem(k));\n","\nimport { GET, SET } from './lib';\n\nimport React, { useReducer, useEffect } from 'react';\n\nimport {\n    MdDone, MdAccessTime, MdSnooze\n} from 'react-icons/md';\n\n// Model constants\n\nexport const PENDING    = 1;\nexport const INPROGRESS = 2;\nexport const DONE       = 3;\n\nexport const STATUS_TEXT = {\n    1: 'Pending',\n    2: 'In Progress',\n    3: 'Done'\n}\n\nexport const STATUS_ICONS = {\n    1: <MdSnooze/>,\n    2: <MdAccessTime/>,\n    3: <MdDone/>\n}\n\nexport const STATUS_VARIANT = {\n    1: \"secondary\",\n    2: \"warning\",\n    3: \"success\"\n}\n\n// Initialize from localStorage\n\nconst defaultState = {\n    list: [{ content:\"Test\", status:PENDING, date: Date.now() }]\n};\n\nif ( ! localStorage.getItem('todis-store') ){\n    SET('todis-store', defaultState);\n}\n\nconst initialState = GET('todis-store');\n\nexport const TodoContext = React.createContext();\n\n// Reducer\n\n// function modifyTodo ( modification ) {\n//     const index = list.findIndex( t => t.date === action.date );\n//     if ( index === -1 ) return state;\n//     state = { ...list[index], ...modification };\n//     return { ...state, list: [ ...list ] };\n// }\n\n// case \"change\":\n//     return modifyTodo( { content: action.content } )\n\n// case \"set\":\n//     return modifyTodo( { status:  action.status  } )\n\nfunction reducer ( state, action ){\n\n    const list  = state.list;\n\n    switch ( action.type ) {\n        \n        case \"add\":\n            return { ...state, list: [\n                {\n                    content: action.content,\n                    date:    Date.now(),\n                    status:  PENDING\n                },\n                ...list\n            ]};\n            \n        case \"change\":\n        case \"set\":\n            const index = list.findIndex( t => t.date === action.date );\n            if ( index === -1 ) return state;\n\n            if ( action.type === 'change')\n                 list[index] = { ...list[index], content: action.content };\n            else list[index] = { ...list[index], status: action.status };\n            \n            return { ...state, list: [ ...list ] };\n        \n        case \"remove\":\n            return { ...state,\n                list: state.list.filter( t => t.date !== action.date )\n            };\n    \n        default:\n            break;\n    }\n}\n\n// Actions\n\nfunction actions ( dispatch ) {\n    return {\n        add:         (content) => dispatch({type:'add',content}),\n        change: (date,content) => dispatch({type:'change',date,content}),\n        set:     (date,status) => dispatch({type:'set',date,status}),\n        remove:         (date) => dispatch({type:'remove',date})\n    };\n}\n\n// Controller component\n\nexport default function TodisStore( { children } ) {\n    const [ state, dispatch ] = useReducer(reducer,initialState);\n    \n    const todoActions = actions(dispatch);\n\n    const add    = todoActions.add;\n    const change = todoActions.change;\n    const set    = todoActions.set;\n    const remove = todoActions.remove;\n\n    // const add    =      (content) => dispatch({type:'add',content});\n    // const change = (date,content) => dispatch({type:'change',date,content});\n    // const set    =  (date,status) => dispatch({type:'set',date,status});\n    // const remove =         (date) => dispatch({type:'remove',date});\n\n    useEffect( ()=> SET('todis-store',state), [state] );\n    \n    return <TodoContext.Provider value={{\n        state,\n        add,\n        change,\n        remove,\n        set,\n    }}>\n        {children}\n    </TodoContext.Provider>\n}","\nimport React, { useState, useContext } from 'react';\n\nimport { MdAdd } from \"react-icons/md\";\n\nimport {\n    Button, FormControl, InputGroup\n} from 'react-bootstrap';\n\nimport { TodoContext } from '../Model';\n\nexport default function Add() {\n    const Todo = useContext(TodoContext);\n\n    const [ value, setValue ] = useState('');\n\n    function add(){\n        Todo.add(value);\n        setValue('');\n    }\n\n    return (\n    <tr>\n        <th colSpan={2}>\n            <InputGroup>\n                <FormControl\n                    value={value}\n                    onChange={e => setValue(e.target.value)}\n                    onKeyPress={ e => { if ( e.key === \"Enter\" ) add() } }\n                    />\n                <InputGroup.Append>\n                    <Button onClick={add}>\n                        <MdAdd/>\n                    </Button>\n                </InputGroup.Append>\n            </InputGroup>\n        </th>\n    </tr> );\n}\n","\nimport React, { useState, useContext } from 'react';\n\nimport {\n    MdSave, MdCancel\n} from 'react-icons/md';\n\nimport {\n    FormControl, Button, InputGroup\n} from 'react-bootstrap';\n\nimport { TodoContext } from '../Model';\n\nexport default function Edit(props) {\n    const Todo = useContext(TodoContext);\n\n    const todo = props.todo;\n\n    const [ value, setValue ] = useState(todo.content);\n\n    function save(){\n        Todo.change(todo.date,value);\n        props.setEdit(false);\n    }\n\n    function cancel (){\n        props.setEdit(false);\n    }\n\n    return (\n    <tr>\n        <td colSpan={2}>\n            <InputGroup>\n                <FormControl\n                    value={value}\n                    onChange={ e => setValue(e.target.value) }\n                />\n                <InputGroup.Append>\n                    <Button title=\"Save\" onClick={save}>\n                        <MdSave/>\n                    </Button>\n                    <Button\n                        title=\"Cancel\" onClick={cancel}\n                        variant=\"danger\"\n                    ><MdCancel/></Button>\n                </InputGroup.Append>\n            </InputGroup>\n        </td>\n    </tr> );\n}\n","\nimport React, { useContext } from 'react';\n\nimport { Badge, Dropdown }  from 'react-bootstrap';\n\nimport {\n  MdDelete, MdEdit\n} from 'react-icons/md';\n\nimport {\n  STATUS_ICONS,\n  STATUS_TEXT,\n  STATUS_VARIANT,\n  PENDING,\n  INPROGRESS,\n  DONE\n} from '../Model';\n\nimport { TodoContext } from '../Model';\n\nexport default function Tools({todo, setEdit}) {\n  const Todo = useContext(TodoContext);\n  return (\n    <Dropdown>\n\n      <Dropdown.Toggle variant={STATUS_VARIANT[todo.status]}>\n        {STATUS_ICONS[todo.status]}\n      </Dropdown.Toggle>\n\n      <Dropdown.Menu>\n\n        <Dropdown.Item onClick={e => Todo.set(todo.date, PENDING)}>\n          <Badge variant={STATUS_VARIANT[PENDING]}>\n            {STATUS_ICONS[PENDING]}\n          </Badge> {STATUS_TEXT[PENDING]}\n        </Dropdown.Item>\n\n        <Dropdown.Item onClick={e => Todo.set(todo.date, INPROGRESS)}>\n          <Badge variant={STATUS_VARIANT[INPROGRESS]}>\n            {STATUS_ICONS[INPROGRESS]}\n          </Badge> {STATUS_TEXT[INPROGRESS]}\n        </Dropdown.Item>\n\n        <Dropdown.Item onClick={e => Todo.set(todo.date, DONE)}>\n          <Badge variant={STATUS_VARIANT[DONE]}>\n            {STATUS_ICONS[DONE]}\n          </Badge> {STATUS_TEXT[DONE]}\n        </Dropdown.Item>\n\n        <Dropdown.Divider />\n\n        <Dropdown.Item onClick={e => setEdit(true)}>\n          <Badge variant=\"primary\">\n            <MdEdit />\n          </Badge> Edit\n          </Dropdown.Item>\n\n        <Dropdown.Item onClick={e => Todo.remove(todo.date)}>\n          <Badge variant=\"danger\">\n            <MdDelete />\n          </Badge> Delete\n          </Dropdown.Item>\n\n      </Dropdown.Menu>\n    </Dropdown> );\n}\n","\nimport React, { useState } from 'react';\n\nimport { Badge }  from 'react-bootstrap';\n\nimport moment from 'moment';\n\nimport Edit  from './Edit';\nimport Tools from './Tools';\n\nexport default function View(props) {\n\n    const [ edit, setEdit ] = useState(false);\n    const [ view, setView ] = useState(false);\n\n    const todo = props.todo;\n\n    let content = todo.content;\n    let expand  = null;\n\n    if ( content.length > 300 ){\n        content = view ? content : todo.content.slice(0,256);\n        expand = <Badge\n            onClick={e => setView(!view)}\n            variant=\"dark\"\n        >{ view ? \"less\" : \"more\" }</Badge>\n    }\n\n    if ( edit ) return <Edit todo={todo} setEdit={setEdit} />;\n\n    return (\n        <tr>\n            <td><Tools todo={todo} setEdit={setEdit}/></td>\n            <td>\n                {content}<br/>\n                <Badge variant=\"primary\">\n                    {moment(todo.date).fromNow()}\n                </Badge>\n                &nbsp;\n                {expand}\n            </td>\n        </tr>\n    );\n}\n","\nimport React           from 'react';\nimport { useContext }  from 'react';\n\nimport { Table }       from 'react-bootstrap';\n\nimport { TodoContext } from '../Model';\n\nimport Add             from './Add';\nimport View            from './View';\n\nexport default function List() {\n    const Todo = useContext(TodoContext);\n    return (\n    <Table>\n        <thead>\n            <Add/>\n        </thead>\n        <tbody>\n            { Todo.state.list.map( ( todo, index ) =>\n                <View todo={todo} key={index}/>\n            )}\n        </tbody>\n    </Table> );\n}\n","export default __webpack_public_path__ + \"static/media/logo.f6a13849.svg\";","\nimport React from 'react';\nimport List  from './component/List';\nimport logo  from './logo.svg';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\n\nfunction App() {\n  return ( <>\n    <img src={logo} className=\"logo\" alt=\"logo\" />\n    <List/>\n    </> );\n  }\n  \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","\n\nimport React      from 'react';\nimport ReactDOM   from 'react-dom';\n\nimport App        from './App';\nimport TodisStore from './Model';\n\nimport * as SWork from './serviceWorkerRegistration';\n\nimport {\n  BrowserRouter\n} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <TodisStore>\n        <App/>\n      </TodisStore>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nSWork.register();\n"],"sourceRoot":""}