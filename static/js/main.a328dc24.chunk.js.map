{"version":3,"sources":["component/Add.js","component/Edit.js","lib.js","Model.js","component/Tools.js","component/View.js","component/List.js","logo.svg","App.js","serviceWorkerRegistration.js","index.js"],"names":["Add","props","useState","value","setValue","add","addTodo","colSpan","InputGroup","FormControl","onChange","e","target","onKeyPress","key","Append","Button","onClick","Edit","todo","content","title","changeTodo","date","setEdit","variant","SET","k","v","localStorage","setItem","JSON","stringify","PENDING","STATUS_TEXT","1","2","3","STATUS_ICONS","STATUS_VARIANT","defaultState","list","status","Date","now","getItem","initialState","parse","TodisStore","children","state","setState","useEffect","addTodoGenerator","index","findIndex","t","changeTodoGenerator","deleteTodo","filter","deleteTodoGenerator","setTodo","setTodoGenerator","newChildren","React","cloneElement","id","Tools","Dropdown","Toggle","Menu","Item","Badge","Divider","View","edit","view","setView","expand","length","slice","moment","fromNow","List","Table","striped","bordered","hover","map","App","src","logo","className","alt","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","SWork"],"mappings":"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","file":"static/js/main.a328dc24.chunk.js","sourcesContent":["\nimport React, { useState } from 'react';\n\nimport { MdAdd } from \"react-icons/md\";\n\nimport {\n    Button, FormControl, InputGroup\n} from 'react-bootstrap';\n\nexport default function Add(props) {\n\n    const [ value, setValue ] = useState('');\n\n    function add(){\n        props.addTodo(value);\n        setValue('');\n    }\n\n    return (\n    <tr>\n        <th colSpan={2}>\n            <InputGroup>\n                <FormControl\n                    value={value}\n                    onChange={e => setValue(e.target.value)}\n                    onKeyPress={ e => { if ( e.key === \"Enter\" ) add() } }\n                    />\n                <InputGroup.Append>\n                    <Button onClick={add}>\n                        <MdAdd/>\n                    </Button>\n                </InputGroup.Append>\n            </InputGroup>\n        </th>\n    </tr> );\n}\n","\nimport React, { useState } from 'react';\n\nimport {\n    MdSave, MdCancel\n} from 'react-icons/md';\n\nimport {\n    FormControl, Button, InputGroup\n} from 'react-bootstrap';\n\nexport default function Edit(props) {\n\n    const todo = props.todo;\n\n    const [ value, setValue ] = useState(todo.content);\n\n    function save(){\n        props.changeTodo(todo.date,value);\n        props.setEdit(false);\n    }\n\n    function cancel (){\n        props.setEdit(false);\n    }\n\n    return (\n    <tr>\n        <td colSpan={2}>\n            <InputGroup>\n                <FormControl\n                    value={value}\n                    onChange={ e => setValue(e.target.value) }\n                />\n                <InputGroup.Append>\n                    <Button title=\"Save\" onClick={save}>\n                        <MdSave/>\n                    </Button>\n                    <Button\n                        title=\"Cancel\" onClick={cancel}\n                        variant=\"danger\"\n                    ><MdCancel/></Button>\n                </InputGroup.Append>\n            </InputGroup>\n        </td>\n    </tr> );\n}\n","\nexport const SET = (k,v)=>\n    localStorage.setItem(k,JSON.stringify(v));\n\nexport const GET = (k  )=>\n    JSON.parse(localStorage.getItem(k));\n","\nimport { GET, SET } from './lib';\n\nimport React, {\n    useEffect, useState\n} from 'react';\n\nimport {\n    MdDone, MdAccessTime, MdSnooze\n} from 'react-icons/md';\n\n// Model constants\n\nexport const PENDING    = 1;\nexport const INPROGRESS = 2;\nexport const DONE       = 3;\n\nexport const STATUS_TEXT = {\n    1: 'Pending',\n    2: 'In Progress',\n    3: 'Done'\n}\n\nexport const STATUS_ICONS = {\n    1: <MdSnooze/>,\n    2: <MdAccessTime/>,\n    3: <MdDone/>\n}\n\nexport const STATUS_VARIANT = {\n    1: \"secondary\",\n    2: \"warning\",\n    3: \"success\"\n}\n\n// Initialize from localStorage\n\nconst defaultState = {\n    list: [{ content:\"Test\", status:PENDING, date: Date.now() }]\n};\n\nif ( ! localStorage.getItem('todis-store') ){\n    SET('todis-store', defaultState);\n}\n\nconst initialState = GET('todis-store');\n\n// State change generators\n\nconst addTodoGenerator = (state,setState)=> (content)=> {\n    setState({ ...state, list: [\n        {\n            content: content,\n            date:    Date.now(),\n            status:  PENDING\n        },\n        ...state.list\n    ]});\n}\n\nconst changeTodoGenerator = (state,setState)=> (date,content)=> {\n    const list  = state.list;\n    const index = list.findIndex( t => t.date === date );\n    if ( index === -1 ) return;\n\n    list[index] = { ...list[index], content }; \n    setState({ ...state, list: [ ...list ] });\n}\n\nconst setTodoGenerator = (state,setState)=> (date,status)=> {\n    const list  = state.list;\n    const index = list.findIndex( t => t.date === date );\n    if ( index === -1 ) return;\n    \n    list[index] = { ...list[index], status };\n    setState({ ...state, list: [ ...list ] });\n}\n\nconst deleteTodoGenerator = (state,setState)=> (date)=> {\n    setState({ ...state,\n        list: state.list.filter( t => t.date !== date )\n    });\n}\n\n// Controller component\n\nexport default function TodisStore( { children } ) {\n    const [ state, setState ] = useState(initialState);\n\n    useEffect( ()=> SET('todis-store',state), [state] );\n\n    const addTodo    = addTodoGenerator(state,setState);\n    const changeTodo = changeTodoGenerator(state,setState);\n    const deleteTodo = deleteTodoGenerator(state,setState);\n    const setTodo    = setTodoGenerator(state,setState);\n\n    // children is on the the App component in this case\n    // usually it would be an array of elements...\n\n    const newChildren = React.cloneElement( children, {\n        state, addTodo, changeTodo, deleteTodo, setTodo\n    });\n\n    return <div id=\"store\">{newChildren}</div>;\n}","\nimport React from 'react';\n\nimport { Badge, Dropdown }  from 'react-bootstrap';\n\nimport {\n  MdDelete, MdEdit\n} from 'react-icons/md';\n\nimport {\n  STATUS_ICONS,\n  STATUS_TEXT,\n  STATUS_VARIANT,\n  PENDING,\n  INPROGRESS,\n  DONE\n} from '../Model';\n\nexport default function Tools({\n  todo, setTodo, deleteTodo, setEdit\n}) {\n  return (\n    <Dropdown>\n\n      <Dropdown.Toggle variant={STATUS_VARIANT[todo.status]}>\n        {STATUS_ICONS[todo.status]}\n      </Dropdown.Toggle>\n\n      <Dropdown.Menu>\n\n        <Dropdown.Item onClick={e => setTodo(todo.date, PENDING)}>\n          <Badge variant={STATUS_VARIANT[PENDING]}>\n            {STATUS_ICONS[PENDING]}\n          </Badge> {STATUS_TEXT[PENDING]}\n        </Dropdown.Item>\n\n        <Dropdown.Item onClick={e => setTodo(todo.date, INPROGRESS)}>\n          <Badge variant={STATUS_VARIANT[INPROGRESS]}>\n            {STATUS_ICONS[INPROGRESS]}\n          </Badge> {STATUS_TEXT[INPROGRESS]}\n        </Dropdown.Item>\n\n        <Dropdown.Item onClick={e => setTodo(todo.date, DONE)}>\n          <Badge variant={STATUS_VARIANT[DONE]}>\n            {STATUS_ICONS[DONE]}\n          </Badge> {STATUS_TEXT[DONE]}\n        </Dropdown.Item>\n\n        <Dropdown.Divider />\n\n        <Dropdown.Item onClick={e => setEdit(true)}>\n          <Badge variant=\"primary\">\n            <MdEdit />\n          </Badge> Edit\n          </Dropdown.Item>\n\n        <Dropdown.Item onClick={e => deleteTodo(todo.date)}>\n          <Badge variant=\"danger\">\n            <MdDelete />\n          </Badge> Delete\n          </Dropdown.Item>\n\n      </Dropdown.Menu>\n    </Dropdown> );\n}\n","\nimport React, { useState }  from 'react';\n\nimport { Badge }  from 'react-bootstrap';\n\nimport moment from 'moment';\n\nimport Edit  from './Edit';\nimport Tools from './Tools';\n\nexport default function View(props) {\n\n    const [ edit, setEdit ] = useState(false);\n    const [ view, setView ] = useState(false);\n\n    const todo = props.todo;\n\n    let content = todo.content;\n    let expand  = null;\n\n    if ( content.length > 300 ){\n        content = view ? content : todo.content.slice(0,256);\n        expand = <Badge\n            onClick={e => setView(!view)}\n            variant=\"dark\"\n        >{ view ? \"less\" : \"more\" }</Badge>\n    }\n\n    if ( edit ) return <Edit {...props} setEdit={setEdit} />;\n\n    return (\n        <tr>\n            <td><Tools {...props} setEdit={setEdit}/></td>\n            <td>\n                {content}<br/>\n                <Badge variant=\"primary\">\n                    {moment(todo.date).fromNow()}\n                </Badge>\n                &nbsp;\n                {expand}\n            </td>\n        </tr>\n    );\n}\n","\nimport React     from 'react';\nimport { Table } from 'react-bootstrap';\n\nimport Add       from './Add';\nimport View      from './View';\n\nexport default function List(props) {\n\n    const state = props.state;\n\n    return (\n    <Table striped bordered hover>\n        <thead>\n            <Add {...props}/>\n        </thead>\n        <tbody>\n            { state.list.map( (todo,index) =>\n                <View {...props} todo={todo} key={index}/>\n            )}\n        </tbody>\n    </Table> );\n}\n","export default __webpack_public_path__ + \"static/media/logo.f6a13849.svg\";","\nimport React from 'react';\nimport List  from './component/List';\nimport logo  from './logo.svg';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\n\nfunction App(props) {\n  return ( <>\n    <img src={logo} className=\"logo\" alt=\"logo\" />\n    <List {...props}/>\n    </> );\n  }\n  \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","\n\nimport React      from 'react';\nimport ReactDOM   from 'react-dom';\n\nimport App        from './App';\nimport TodisStore from './Model';\n\nimport * as SWork from './serviceWorkerRegistration';\n\nimport {\n  BrowserRouter\n} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <TodisStore>\n        <App/>\n      </TodisStore>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nSWork.register();\n"],"sourceRoot":""}